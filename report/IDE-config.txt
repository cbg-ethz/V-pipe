MegaLinter can help you to define the same linter configuration locally

INSTRUCTIONS

- Copy the content of IDE-config folder at the root of your repository
- if you are using Visual Studio Code, just reopen your project after the copy, and you will be prompted to install recommended extensions
- If not, you can install extensions manually using the following links.

IDE EXTENSIONS APPLICABLE TO YOUR PROJECT

shellcheck (BASH)
  - atom:
    - linter-shellcheck: https://github.com/AtomLinter/linter-shellcheck
  - emacs:
    - flycheck: https://github.com/flycheck/flycheck
    - flymake-shellcheck: https://github.com/federicotdn/flymake-shellcheck
  - sublime:
    - SublimeLinter-shellcheck: https://github.com/SublimeLinter/SublimeLinter-shellcheck
  - vim:
    - ale: https://github.com/w0rp/ale
    - neomake: https://github.com/neomake/neomake
    - syntastic: https://github.com/scrooloose/syntastic
  - vscode:
    - vscode-shellcheck: https://marketplace.visualstudio.com/items?itemName=timonwong.shellcheck

markdownlint (MARKDOWN)
  - atom:
    - linter-node-markdownlint: https://atom.io/packages/linter-node-markdownlint
  - sublime:
    - SublimeLinter-contrib-markdownlint: https://packagecontrol.io/packages/SublimeLinter-contrib-markdownlint
  - vim:
    - coc-markdownlint: https://github.com/fannheyward/coc-markdownlint
  - vscode:
    - vscode-markdownlint: https://marketplace.visualstudio.com/items/DavidAnson.vscode-markdownlint

black (PYTHON)
  - atom:
    - python-black: https://atom.io/packages/python-black
  - emacs:
    - blacken: https://github.com/pythonic-emacs/blacken
    - reformatter.el: https://github.com/purcell/reformatter.el
    - elpy: https://github.com/jorgenschaefer/elpy
  - idea:
    - black: https://black.readthedocs.io/en/stable/editor_integration.html#pycharm-intellij-idea
  - sublime:
    - sublack: https://github.com/jgirardet/sublack
  - vscode:
    - VsCode Python Extension: https://marketplace.visualstudio.com/items?itemName=ms-python.python
